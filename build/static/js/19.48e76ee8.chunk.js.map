{"version":3,"sources":["pages/Movie/Movie.styles.jsx","pages/Movie/Movie.jsx"],"names":["makeStyles","theme","root","minHeight","paddingTop","background","palette","secondary","main","section","marginBottom","spacing","breakpoints","down","pagination","marginTop","color","borderColor","alpha","primary","Movie","classes","useStyles","useState","page","setPage","dispatch","useDispatch","totalPages","useSelector","state","media","results","getMediaItemsHandler","useCallback","limit","a","mediaGetByPage","sort","unwrap","console","log","useLayoutEffect","window","scrollTo","useEffect","className","Box","padding","Grid","container","length","map","movie","index","item","xs","sm","md","lg","MovieItem","id","_id","title","image","posterUrl","description","overview","genres","name","Pagination","variant","shape","onChange","event","value","count"],"mappings":"wNAGeA,eAAW,SAACC,GAAD,YAAY,CACpCC,KAAM,CACJC,UAAW,QACXC,WAAY,OACZC,WAAYJ,EAAMK,QAAQC,UAAUC,MAEtCC,SAAO,GACL,qBAAsB,CACpBC,aAAcT,EAAMU,QAAQ,KAFzB,cAIJV,EAAMW,YAAYC,KAAK,MAAQ,CAC9B,qBAAsB,CACpBH,aAAcT,EAAMU,QAAQ,MAN3B,cASJV,EAAMW,YAAYC,KAAK,MAAQ,CAC9B,qBAAsB,CACpBH,aAAcT,EAAMU,QAAQ,MAX3B,cAcJV,EAAMW,YAAYC,KAAK,MAAQ,CAC9B,qBAAsB,CACpBH,aAAcT,EAAMU,QAAQ,MAhB3B,GAoBPG,WAAY,CACVC,UAAWd,EAAMU,QAAQ,GACzB,4BAA6B,CAC3BK,MAAO,OACPC,YAAaC,YAAM,OAAQ,KAE7B,yCAA0C,CACxCF,MAAOf,EAAMK,QAAQa,QAAQX,KAC7BS,YAAahB,EAAMK,QAAQa,QAAQX,W,gCC+C1BY,UA3Ef,WACE,IAAMC,EAAUC,IAEhB,EAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGMC,EAAWC,cAEXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,cAIhDI,EAAUH,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,WAE7CC,EAAuBC,sBAAW,uCACtC,WAAOV,EAAMW,GAAb,SAAAC,EAAA,+EAEUV,EACJW,YAAe,CACbb,OACAW,QACAG,KAAM,eAERC,SARN,sDAUIC,QAAQC,IAAI,mDAAZ,MAVJ,wDADsC,wDActC,CAACf,IAaH,OAPAgB,2BAAgB,WACdC,OAAOC,SAAS,EAAG,KAClB,IACHC,qBAAU,WACRZ,EAAqBT,EAjCT,MAkCX,CAACE,EAAUF,EAlCA,GAkCaS,IAGzB,qBAAKa,UAAWzB,EAAQnB,KAAxB,SACE,eAAC6C,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACvC,QAAS,EAAzB,UACU,OAAPqB,QAAO,IAAPA,OAAA,EAAAA,EAASmB,QAAS,GACjBnB,EAAQoB,KAAI,SAACC,EAAOC,GAAR,aACV,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAeb,UAAWzB,EAAQZ,QAAtE,SACE,cAACmD,EAAA,EAAD,CACEC,GAAIR,EAAMS,IACVC,MAAOV,EAAMU,MACbC,MAAOX,EAAMY,UACbC,YAAab,EAAMc,SACnBC,OAAM,UAAEf,EAAMe,cAAR,aAAE,EAAchB,KAAI,SAACG,GAAD,OAAUA,EAAKc,WANDf,QAWjD1B,EAAa,GACZ,qBAAKkB,UAAWzB,EAAQP,WAAxB,SACE,cAACwD,EAAA,EAAD,CACEtD,MAAM,UACNuD,QAAQ,WACRC,MAAM,UACNhD,KAAMA,EACNiD,SAlCc,SAACC,EAAOC,GAChClD,EAAQkD,IAkCEC,MAAOhD","file":"static/js/19.48e76ee8.chunk.js","sourcesContent":["import { alpha } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '100vh',\r\n    paddingTop: '20vh',\r\n    background: theme.palette.secondary.main,\r\n  },\r\n  section: {\r\n    '&:nth-child(n + 6)': {\r\n      marginBottom: theme.spacing(7),\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      '&:nth-child(n + 4)': {\r\n        marginBottom: theme.spacing(6),\r\n      },\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      '&:nth-child(n + 3)': {\r\n        marginBottom: theme.spacing(5),\r\n      },\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      '&:nth-child(n + 2)': {\r\n        marginBottom: theme.spacing(4),\r\n      },\r\n    },\r\n  },\r\n  pagination: {\r\n    marginTop: theme.spacing(5),\r\n    '& .MuiPaginationItem-root': {\r\n      color: '#fff',\r\n      borderColor: alpha('#fff', 0.5),\r\n    },\r\n    '& .MuiPaginationItem-root.Mui-selected': {\r\n      color: theme.palette.primary.main,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n","import { Box, Grid } from '@material-ui/core';\r\nimport React, { useCallback, useEffect, useLayoutEffect, useState } from 'react';\r\nimport MovieItem from '../../components/MovieItem/MovieItem';\r\nimport useStyles from './Movie.styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { mediaGetByPage } from '../../slices/media.slice';\r\n\r\nfunction Movie() {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = useState(1);\r\n  // const [limit, setLimit] = useState(42);\r\n  const limit = 42;\r\n  const dispatch = useDispatch();\r\n\r\n  const totalPages = useSelector((state) => state.media.totalPages);\r\n  // const isLoading = useSelector((state) => state.media.isLoading);\r\n  // const totalResults = useSelector((state) => state.media.totalResults);\r\n  // const currentPage = useSelector((state) => state.media.page);\r\n  const results = useSelector((state) => state.media.results);\r\n\r\n  const getMediaItemsHandler = useCallback(\r\n    async (page, limit) => {\r\n      try {\r\n        await dispatch(\r\n          mediaGetByPage({\r\n            page,\r\n            limit,\r\n            sort: 'desc(_id)',\r\n          })\r\n        ).unwrap();\r\n      } catch (error) {\r\n        console.log('ðŸš€ ~ file: Movie.jsx ~ line 32 ~ error', error);\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const pageChangeHandler = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  useLayoutEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  useEffect(() => {\r\n    getMediaItemsHandler(page, limit);\r\n  }, [dispatch, page, limit, getMediaItemsHandler]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box padding=\"0 4%\">\r\n        <Grid container spacing={2}>\r\n          {results?.length > 0 &&\r\n            results.map((movie, index) => (\r\n              <Grid item xs={6} sm={4} md={3} lg={2} key={index} className={classes.section}>\r\n                <MovieItem\r\n                  id={movie._id}\r\n                  title={movie.title}\r\n                  image={movie.posterUrl}\r\n                  description={movie.overview}\r\n                  genres={movie.genres?.map((item) => item.name)}\r\n                />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n        {totalPages > 0 && (\r\n          <div className={classes.pagination}>\r\n            <Pagination\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              page={page}\r\n              onChange={pageChangeHandler}\r\n              count={totalPages}\r\n            />\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n"],"sourceRoot":""}