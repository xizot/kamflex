{"version":3,"sources":["hooks/user-input.js","components/UI/ButtonLoading/ButtonLoading.jsx","schemas/password.chema.js","schemas/user.chema.js","schemas/code.chema.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","pages/AUTH/Profile/Profile.styles.jsx","pages/AUTH/Profile/Profile.jsx"],"names":["Joi","require","useInput","schemaJson","initialState","useState","enteredInput","setEnteredInput","isTouched","setIsTouched","inputIsValid","errorMsg","schema","object","validate","value","error","toString","hasError","inputChangeHandler","e","target","inputBlurHandler","inputReset","useEffect","useStyles","makeStyles","theme","root","display","background","cursort","buttonLoading","opacity","minHeight","ButtonLoading","children","size","onClick","isLoading","props","classes","className","fullWidth","variant","color","startIcon","style","passwordschema","string","min","required","messages","confirmpasswordSchema","usernameSchema","max","emailSchema","email","tlds","allow","verifyCodeSchema","FormControlLabel","React","ref","checked","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","concat","capitalize","Typography","component","withStyles","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","undefined","event","input","newChecked","padding","position","width","height","top","left","margin","zIndex","Switch","_props$color","_props$edge","edge","_props$size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","colorAdjust","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","paddingTop","content","title","fontWeight","textTransform","subTitle","phoneInput","form","shape","breakpoints","down","formControl","marginBottom","button","pointerEvents","inputInvalid","borderColor","formHelperText","iconClose","right","handleAvatar","maxWidth","spacing","avatar","objectFit","border","labelAvatar","avatarHover","justifyContent","whiteSpace","labelDelete","btnUpdateImage","marginTop","Profile","accId","pAvatar","onUpdateNewData","onChangeDetails","dispatch","useDispatch","user","useSelector","auth","userInfo","info","isChangePassword","setIsChangePassword","isChanged","setIsChanged","isChangeEmail","setIsChangeEmail","emailHasError","emailBlurHandler","emailChangeHandler","emailIsValid","setEmail","password","passwordHasError","passwordBlurHandler","passwordChangeHandler","passwordIsValid","passwordReset","newPassword","newPasswordHasError","newPasswordBlurHandler","newPasswordChangeHandler","newPasswordIsValid","newPasswordReset","confirmPassword","confirmPasswordHasError","confirmPasswordBlurHandler","confirmPasswordChangeHandler","confirmPasswordIsValid","confirmPasswordReset","username","usernameHasError","usernameBlurHandler","usernameChangeHandler","usernameIsValid","setUsername","Date","birthDate","setBirthDate","getUserHandler","useCallback","a","getUser","unwrap","toast","birthdate","formIsValid","formSubmitHandler","preventDefault","data","_id","moment","format","currentPassword","updateUser","success","toDateString","length","Container","Box","noValidate","autoComplete","onSubmit","Grid","container","item","xs","md","FormControl","TextField","helperText","utils","MomentUtils","datePicker","maxDate","date","autoOk","inputVariant","KeyboardButtonProps","textDecoration","prev"],"mappings":"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","file":"static/js/13.b1ef586f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nconst Joi = require('joi');\r\n\r\nexport const useInput = (schemaJson = null, initialState = '') => {\r\n  const [enteredInput, setEnteredInput] = useState(initialState);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  let inputIsValid = true;\r\n\r\n  let errorMsg = null;\r\n  if (schemaJson) {\r\n    const schema = Joi.object(schemaJson);\r\n    const { error } = schema.validate({ value: enteredInput });\r\n    if (error) {\r\n      errorMsg = error.toString();\r\n      inputIsValid = false;\r\n    }\r\n  }\r\n\r\n  const hasError = !inputIsValid && isTouched;\r\n  const inputChangeHandler = (e) => {\r\n    setEnteredInput(e.target.value);\r\n  };\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n  const inputReset = () => {\r\n    setIsTouched(false);\r\n    setEnteredInput('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEnteredInput(initialState);\r\n  }, [initialState]);\r\n\r\n  return {\r\n    enteredInput,\r\n    inputIsValid,\r\n    hasError,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n    inputReset,\r\n    setEnteredInput,\r\n    errorMsg,\r\n    isTouched,\r\n  };\r\n};\r\n","import { Button, CircularProgress, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'block',\r\n    '&.Mui-disabled': {\r\n      background: '#ddd',\r\n      cursort: 'not-allowed',\r\n    },\r\n  },\r\n  buttonLoading: {\r\n    opacity: ' 0.7 !important',\r\n    minHeight: 42,\r\n  },\r\n}));\r\n\r\nfunction ButtonLoading({ children, size, onClick, isLoading, ...props }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <Button\r\n          className={`${classes.root} ${classes.buttonLoading}`}\r\n          fullWidth\r\n          size={size}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<CircularProgress size={22} style={{ color: '#fff' }} />}\r\n        />\r\n      )}\r\n      {!isLoading && (\r\n        <Button\r\n          className={classes.root}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          size={size}\r\n          onClick={onClick}\r\n          {...props}>\r\n          {children}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonLoading;\r\n","const Joi = require('joi');\r\nconst passwordschema = {\r\n  value: Joi.string().min(8).required().messages({\r\n    'string.base': `Password should be a type of 'text'`,\r\n    'string.empty': `Password cannot be an empty field`,\r\n    'any.required': `Password is a required field`,\r\n    'string.min': 'Password must be longer than or equal to 8 characters',\r\n  }),\r\n};\r\n\r\nconst confirmpasswordSchema = {\r\n  value: Joi.string().required().messages({\r\n    'string.empty': `Retype password cannot be an empty field`,\r\n  }),\r\n};\r\n\r\nexport { passwordschema, confirmpasswordSchema };\r\n","const Joi = require('joi');\r\nconst usernameSchema = {\r\n  value: Joi.string().min(3).max(32).required().messages({\r\n    'string.base': `Username should be a type of 'text' or email`,\r\n    'string.empty': `Username cannot be an empty field`,\r\n    'string.min': `Username should have a minimum length of {#limit}`,\r\n    'string.max': `Username should have a maximum length of {#limit}`,\r\n    'any.required': `Username is a required field`,\r\n  }),\r\n};\r\n\r\nconst emailSchema = {\r\n  value: Joi.string()\r\n    .max(320)\r\n    .email({ tlds: { allow: false } })\r\n    .required()\r\n    .messages({\r\n      'string.empty': `Email cannot be an empty field`,\r\n      'string.max': `Email should have a maximum length of {#limit}`,\r\n      'any.required': `Email is a required field`,\r\n    }),\r\n};\r\n\r\nexport { usernameSchema, emailSchema };\r\n","const Joi = require('joi');\r\nconst recoveryCodeSchema = {\r\n  value: Joi.string().required().messages({\r\n    'string.empty': `\"recoveryCode\" cannot be an empty field`,\r\n    'any.required': `\"recoveryCode\" is a required field`,\r\n  }),\r\n};\r\n\r\nconst verifyCodeSchema = {\r\n  value: Joi.string().required().messages({\r\n    'string.empty': `\"recoveryCode\" cannot be an empty field`,\r\n    'any.required': `\"recoveryCode\" is a required field`,\r\n  }),\r\n};\r\n\r\nexport { recoveryCodeSchema, verifyCodeSchema };\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import { makeStyles } from '@material-ui/core';\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '100vh',\r\n    paddingTop: '20vh',\r\n    '& input[readonly]': {\r\n      background: '#ddd',\r\n    },\r\n  },\r\n  content: {\r\n    padding: '20vh 0',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    textTransform: 'uppercase',\r\n  },\r\n  subTitle: {\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  phoneInput: {\r\n    height: '255px ',\r\n  },\r\n  form: {\r\n    background: '#fff',\r\n    width: '100%',\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: '50px 25px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '35px 15px',\r\n    },\r\n  },\r\n  formControl: {\r\n    display: 'block',\r\n    marginBottom: 15,\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    '&:disabled': {\r\n      cursor: 'not-allowed',\r\n      pointerEvents: 'all !important',\r\n    },\r\n  },\r\n  inputInvalid: {\r\n    borderColor: theme.palette.error.main + '!important',\r\n    '& ~ div': {\r\n      borderColor: theme.palette.error.main + '!important',\r\n    },\r\n  },\r\n  formHelperText: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  iconClose: {\r\n    position: 'absolute',\r\n    right: -12,\r\n    top: -12,\r\n    color: '#000',\r\n  },\r\n  handleAvatar: {\r\n    width: 'fit-content',\r\n    maxWidth: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n  avatar: {\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n    borderRadius: '50%',\r\n    border: '1px solid #ddd',\r\n  },\r\n  labelAvatar: {\r\n    width: 200,\r\n    height: 200,\r\n    marginBottom: theme.spacing(2),\r\n    display: 'block',\r\n    position: 'relative',\r\n    '&:hover $avatarHover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  avatarHover: {\r\n    opacity: 0,\r\n    transition: 'opacity .5s',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '50%',\r\n    background: 'rgba(0,0,0,.5)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '& > label': {\r\n      padding: theme.spacing(0.25, 0.75),\r\n      background: '#fff',\r\n      whiteSpace: 'nowrap',\r\n      borderRadius: theme.shape.borderRadius,\r\n      boxShadow: '0px 2px 8px rgba(0,0,0,.3)',\r\n      fontWeight: 'bold',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        opacity: 0.8,\r\n      },\r\n    },\r\n    '&.is-show': {\r\n      opacity: 1,\r\n      transition: 'opacity .5s',\r\n    },\r\n  },\r\n  labelDelete: {\r\n    color: 'red',\r\n  },\r\n  btnUpdateImage: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Container,\r\n  FormControlLabel,\r\n  Switch,\r\n} from '@material-ui/core';\r\nimport { useInput } from '../../../hooks/user-input';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ButtonLoading from '../../../components/UI/ButtonLoading/ButtonLoading';\r\nimport { toast } from 'react-toastify';\r\nimport useStyles from './Profile.styles';\r\nimport { emailSchema, passwordschema, usernameSchema } from '../../../schemas';\r\nimport { getUser, updateUser } from '../../../slices/user.slice';\r\nimport moment from 'moment';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nconst Profile = ({ accId, pAvatar, onUpdateNewData, onChangeDetails }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // const modifyLoading = false;\r\n  const user = useSelector((state) => state.auth.user);\r\n  const userInfo = useSelector((state) => state.userInfo.info);\r\n  const basicLoading = false;\r\n  // const [selectedFile, setSelectedFile] = useState(null);\r\n  // const [newAvatar, setNewAvatar] = useState(null);\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const [isChangeEmail, setIsChangeEmail] = useState(false);\r\n  // const fileRef = useRef();\r\n  const {\r\n    enteredInput: email,\r\n    hasError: emailHasError,\r\n    inputBlurHandler: emailBlurHandler,\r\n    inputChangeHandler: emailChangeHandler,\r\n    inputIsValid: emailIsValid,\r\n    setEnteredInput: setEmail,\r\n  } = useInput(emailSchema);\r\n  const {\r\n    enteredInput: password,\r\n    hasError: passwordHasError,\r\n    inputBlurHandler: passwordBlurHandler,\r\n    inputChangeHandler: passwordChangeHandler,\r\n    inputIsValid: passwordIsValid,\r\n    inputReset: passwordReset,\r\n  } = useInput(passwordschema);\r\n  const {\r\n    enteredInput: newPassword,\r\n    hasError: newPasswordHasError,\r\n    inputBlurHandler: newPasswordBlurHandler,\r\n    inputChangeHandler: newPasswordChangeHandler,\r\n    inputIsValid: newPasswordIsValid,\r\n    inputReset: newPasswordReset,\r\n  } = useInput(passwordschema);\r\n  const {\r\n    enteredInput: confirmPassword,\r\n    hasError: confirmPasswordHasError,\r\n    inputBlurHandler: confirmPasswordBlurHandler,\r\n    inputChangeHandler: confirmPasswordChangeHandler,\r\n    inputIsValid: confirmPasswordIsValid,\r\n    inputReset: confirmPasswordReset,\r\n  } = useInput(passwordschema);\r\n\r\n  const {\r\n    enteredInput: username,\r\n    hasError: usernameHasError,\r\n    inputBlurHandler: usernameBlurHandler,\r\n    inputChangeHandler: usernameChangeHandler,\r\n    inputIsValid: usernameIsValid,\r\n    setEnteredInput: setUsername,\r\n  } = useInput(usernameSchema);\r\n  const [birthDate, setBirthDate] = useState(new Date());\r\n  const handleDateChange = (date) => {\r\n    setBirthDate(date);\r\n  };\r\n\r\n  const getUserHandler = useCallback(\r\n    async (id) => {\r\n      try {\r\n        await dispatch(getUser(id)).unwrap();\r\n      } catch (error) {\r\n        toast.error(error);\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const isChangeEmailOrUsernameHandler = (event) => {\r\n    setIsChangeEmail(event.target.checked);\r\n  };\r\n\r\n  // const fileChangeHandler = (file) => {\r\n  //   setSelectedFile(file || null);\r\n  // };\r\n\r\n  // const removeFileChangeHandler = () => {\r\n  //   fileRef.current.value = '';\r\n  //   setSelectedFile(null);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    setEmail(userInfo?.email || '');\r\n    setUsername(userInfo?.username || '');\r\n    setBirthDate(new Date(userInfo?.birthdate) || '');\r\n  }, [userInfo, setEmail, setUsername, setBirthDate]);\r\n\r\n  // const insertOrUpdateAvatarHandler = async () => {\r\n  //   console.log('here', selectedFile);\r\n  //   let formData = new FormData();\r\n  //   if (selectedFile === null) return;\r\n  //   formData.append('accId', accId);\r\n  //   formData.append('image', selectedFile);\r\n  //   try {\r\n  //     onUpdateNewData({ accAvatar: selectedFile });\r\n  //     onChangeDetails({ accAvatar: newAvatar });\r\n  //     setSelectedFile(null);\r\n  //     setNewAvatar(null);\r\n  //     toast.success('Cập nhật ảnh thành công');\r\n  //   } catch (error) {\r\n  //     toast.error(error);\r\n  //   }\r\n  // };\r\n\r\n  const formIsValid = emailIsValid && usernameIsValid;\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (!formIsValid) return;\r\n\r\n    let data = {\r\n      id: userInfo._id,\r\n      birthdate: moment(birthDate).format('yyyy-MM-DD'),\r\n    };\r\n\r\n    if (isChangeEmail) {\r\n      data.email = email;\r\n      data.username = username;\r\n      data.currentPassword = password;\r\n    }\r\n    if (isChangePassword) {\r\n      if (!passwordIsValid || !newPasswordIsValid || !confirmPasswordIsValid) {\r\n        return;\r\n      } else {\r\n        data.currentPassword = password;\r\n        data.password = newPassword;\r\n      }\r\n    }\r\n    try {\r\n      await dispatch(updateUser(data)).unwrap();\r\n      toast.success('Update account successfully');\r\n      getUser(data.id);\r\n      passwordReset();\r\n      confirmPasswordReset();\r\n      newPasswordReset();\r\n    } catch (error) {\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user?._id) {\r\n      getUserHandler(user._id);\r\n    }\r\n  }, [getUserHandler, user]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      email !== userInfo?.email ||\r\n      username !== userInfo?.username ||\r\n      new Date(birthDate).toDateString() !== new Date(userInfo.birthdate).toDateString() ||\r\n      password.length > 0\r\n    ) {\r\n      setIsChanged(true);\r\n    } else {\r\n      setIsChanged(false);\r\n    }\r\n  }, [email, username, birthDate, password, userInfo]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <Box className={classes.form} boxShadow={3}>\r\n          <form noValidate autoComplete=\"off\" onSubmit={formSubmitHandler}>\r\n            <Grid container spacing={2} justifyContent=\"center\">\r\n              {/* <Grid item xs={12} md={3}>\r\n                <Box className={classes.handleAvatar}>\r\n                  <input\r\n                    accept=\"image/jpeg\"\r\n                    id=\"avatar\"\r\n                    type=\"file\"\r\n                    ref={fileRef}\r\n                    style={{ display: 'none' }}\r\n                    onChange={(e) => fileChangeHandler(e.target.files[0])}\r\n                  />\r\n                  <div className={classes.labelAvatar}>\r\n                    <img\r\n                      src={\r\n                        newAvatar\r\n                          ? newAvatar\r\n                          : pAvatar || process.env.PUBLIC_URL + '/images/default-avatar.png'\r\n                      }\r\n                      alt=\"user avatar\"\r\n                      className={classes.avatar}\r\n                    />\r\n                    <div className={`${classes.avatarHover} ${newAvatar ? 'is-show' : ''}`}>\r\n                      {!newAvatar && (\r\n                        <Typography variant=\"caption\" component=\"label\" htmlFor=\"avatar\">\r\n                          Select your avatar\r\n                        </Typography>\r\n                      )}\r\n                      {!modifyLoading && newAvatar && (\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          component=\"label\"\r\n                          onClick={removeFileChangeHandler}\r\n                          className={classes.labelDelete}>\r\n                          Remove\r\n                        </Typography>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <ButtonLoading\r\n                    size=\"large\"\r\n                    type=\"button\"\r\n                    fullWidth={false}\r\n                    isLoading={modifyLoading}\r\n                    disabled={selectedFile === null}>\r\n                    Update Avatar\r\n                  </ButtonLoading>\r\n                </Box>\r\n              </Grid> */}\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl className={classes.formControl}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        color=\"primary\"\r\n                        checked={isChangeEmail}\r\n                        onChange={(e) => isChangeEmailOrUsernameHandler(e)}\r\n                        name=\"checkedA\"\r\n                      />\r\n                    }\r\n                    label=\"Change email or username\"\r\n                  />\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    error={usernameHasError}\r\n                    label=\"Username\"\r\n                    helperText={usernameHasError && 'Username is invalid'}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={username}\r\n                    onBlur={usernameBlurHandler}\r\n                    onChange={usernameChangeHandler}\r\n                    inputProps={{\r\n                      autoComplete: 'new-password',\r\n                      form: {\r\n                        autoComplete: 'off',\r\n                      },\r\n                      readOnly: !isChangeEmail,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    error={emailHasError}\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    helperText={emailHasError && 'Email is invalid'}\r\n                    required\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    value={email}\r\n                    onBlur={emailBlurHandler}\r\n                    onChange={emailChangeHandler}\r\n                    inputProps={{\r\n                      autoComplete: 'new-password',\r\n                      form: {\r\n                        autoComplete: 'off',\r\n                      },\r\n                      readOnly: !isChangeEmail,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <div className={classes.formControl}>\r\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <FormControl\r\n                      error={passwordHasError}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      className={classes.formControl}>\r\n                      <KeyboardDatePicker\r\n                        className={classes.datePicker}\r\n                        label=\"Birth day\"\r\n                        size=\"small\"\r\n                        format=\"MM/DD/yyyy\"\r\n                        maxDate={new Date()}\r\n                        value={birthDate}\r\n                        onChange={handleDateChange}\r\n                        error={false}\r\n                        helperText={null}\r\n                        autoOk\r\n                        fullWidth\r\n                        variant=\"inline\"\r\n                        inputVariant=\"outlined\"\r\n                        KeyboardButtonProps={{\r\n                          'aria-label': 'change date',\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </MuiPickersUtilsProvider>\r\n                </div>\r\n                {isChangeEmail && !isChangePassword && (\r\n                  <FormControl className={classes.formControl}>\r\n                    <TextField\r\n                      label=\"Current password\"\r\n                      type=\"password\"\r\n                      error={passwordHasError}\r\n                      helperText={passwordHasError && 'Password is invalid'}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      value={password}\r\n                      onBlur={passwordBlurHandler}\r\n                      onChange={passwordChangeHandler}\r\n                      inputProps={{\r\n                        autoComplete: 'new-password',\r\n                        form: {\r\n                          autoComplete: 'off',\r\n                        },\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                )}\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    marginLeft: 'auto',\r\n                    width: 'fit-content',\r\n                    whiteSpace: 'nowrap',\r\n                    textDecoration: 'underline',\r\n                    cursor: 'pointer',\r\n                    marginBottom: 10,\r\n                  }}\r\n                  onClick={() => setIsChangePassword((prev) => !prev)}>\r\n                  {isChangePassword ? 'Cancel' : 'Change Password'}\r\n                </Typography>\r\n\r\n                {isChangePassword && (\r\n                  <>\r\n                    <FormControl className={classes.formControl}>\r\n                      <TextField\r\n                        label=\"Current password\"\r\n                        type=\"password\"\r\n                        error={passwordHasError}\r\n                        helperText={passwordHasError && 'Password is invalid'}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        value={password}\r\n                        onBlur={passwordBlurHandler}\r\n                        onChange={passwordChangeHandler}\r\n                        inputProps={{\r\n                          autoComplete: 'new-password',\r\n                          form: {\r\n                            autoComplete: 'off',\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                      <TextField\r\n                        label=\"New password\"\r\n                        type=\"password\"\r\n                        error={newPasswordHasError}\r\n                        helperText={newPasswordHasError && 'New password is invalid'}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        value={newPassword}\r\n                        onBlur={newPasswordBlurHandler}\r\n                        onChange={newPasswordChangeHandler}\r\n                        inputProps={{\r\n                          autoComplete: 'new-password',\r\n                          form: {\r\n                            autoComplete: 'off',\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                      <TextField\r\n                        label=\"Confirm password\"\r\n                        type=\"password\"\r\n                        error={confirmPasswordHasError}\r\n                        helperText={confirmPasswordHasError && 'Password is not match'}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        value={confirmPassword}\r\n                        onBlur={confirmPasswordBlurHandler}\r\n                        onChange={confirmPasswordChangeHandler}\r\n                        inputProps={{\r\n                          autoComplete: 'new-password',\r\n                          form: {\r\n                            autoComplete: 'off',\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </>\r\n                )}\r\n                <ButtonLoading\r\n                  isLoading={basicLoading}\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                  disabled={\r\n                    !formIsValid ||\r\n                    (isChangePassword &&\r\n                      (!passwordIsValid || !newPasswordIsValid || !confirmPasswordIsValid)) ||\r\n                    !isChanged\r\n                  }>\r\n                  {'Change information'}\r\n                </ButtonLoading>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n"],"sourceRoot":""}