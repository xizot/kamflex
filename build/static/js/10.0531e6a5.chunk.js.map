{"version":3,"sources":["hooks/user-input.js","components/UI/ButtonLoading/ButtonLoading.jsx","schemas/password.chema.js","schemas/user.chema.js","schemas/code.chema.js","../node_modules/@material-ui/icons/esm/Visibility.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/icons/esm/VisibilityOff.js","pages/Login/Login.styles.jsx","pages/Login/Login.jsx"],"names":["Joi","require","useInput","schemaJson","initialState","useState","enteredInput","setEnteredInput","isTouched","setIsTouched","inputIsValid","errorMsg","schema","object","validate","value","error","toString","hasError","inputChangeHandler","e","target","inputBlurHandler","inputReset","useEffect","useStyles","makeStyles","theme","root","display","background","cursort","buttonLoading","opacity","minHeight","ButtonLoading","children","size","onClick","isLoading","props","classes","className","fullWidth","variant","color","startIcon","style","passwordschema","string","min","required","messages","confirmpasswordSchema","usernameSchema","max","emailSchema","email","tlds","allow","verifyCodeSchema","createSvgIcon","React","d","InputAdornment","ref","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","_extends","clsx","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","Typography","withStyles","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","backgroundAttachment","paddingTop","paddingBottom","zIndex","content","left","top","width","alpha","form","maxWidth","padding","spacing","borderRadius","breakpoints","down","title","marginBottom","textAlign","formControl","textField","shape","inputLabel","fontSize","textHelper","palette","primary","main","textDecoration","errorMessage","fontWeight","resError","Login","location","useLocation","dispatch","useDispatch","showPassword","setShowPassword","useSelector","state","auth","isAuthenticated","user","setError","emailBlurHandler","emailChangeHandler","emailReset","emailIsvalid","emailHasError","emailErrorMessage","password","passwordBlurHandler","passwordChangeHandler","passwordReset","passwordIsvalid","passwordHasError","passwordErrorMessage","formIsValid","formSubmitHandler","a","preventDefault","login","unwrap","toast","banned","to","verified","from","onSubmit","FormControl","InputLabel","htmlFor","FilledInput","onBlur","onChange","id","type","FormHelperText","inputField","endAdornment","IconButton","edge","prevState","onMouseDown","event","Visibility","VisibilityOff","disabled","Box","flexWrap"],"mappings":"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","file":"static/js/10.0531e6a5.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nconst Joi = require('joi');\r\n\r\nexport const useInput = (schemaJson = null, initialState = '') => {\r\n  const [enteredInput, setEnteredInput] = useState(initialState);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  let inputIsValid = true;\r\n\r\n  let errorMsg = null;\r\n  if (schemaJson) {\r\n    const schema = Joi.object(schemaJson);\r\n    const { error } = schema.validate({ value: enteredInput });\r\n    if (error) {\r\n      errorMsg = error.toString();\r\n      inputIsValid = false;\r\n    }\r\n  }\r\n\r\n  const hasError = !inputIsValid && isTouched;\r\n  const inputChangeHandler = (e) => {\r\n    setEnteredInput(e.target.value);\r\n  };\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n  const inputReset = () => {\r\n    setIsTouched(false);\r\n    setEnteredInput('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEnteredInput(initialState);\r\n  }, [initialState]);\r\n\r\n  return {\r\n    enteredInput,\r\n    inputIsValid,\r\n    hasError,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n    inputReset,\r\n    setEnteredInput,\r\n    errorMsg,\r\n    isTouched,\r\n  };\r\n};\r\n","import { Button, CircularProgress, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'block',\r\n    '&.Mui-disabled': {\r\n      background: '#ddd',\r\n      cursort: 'not-allowed',\r\n    },\r\n  },\r\n  buttonLoading: {\r\n    opacity: ' 0.7 !important',\r\n    minHeight: 42,\r\n  },\r\n}));\r\n\r\nfunction ButtonLoading({ children, size, onClick, isLoading, ...props }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <Button\r\n          className={`${classes.root} ${classes.buttonLoading}`}\r\n          fullWidth\r\n          size={size}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<CircularProgress size={22} style={{ color: '#fff' }} />}\r\n        />\r\n      )}\r\n      {!isLoading && (\r\n        <Button\r\n          className={classes.root}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          size={size}\r\n          onClick={onClick}\r\n          {...props}>\r\n          {children}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonLoading;\r\n","const Joi = require('joi');\r\nconst passwordschema = {\r\n  value: Joi.string().min(8).required().messages({\r\n    'string.base': `Password should be a type of 'text'`,\r\n    'string.empty': `Password cannot be an empty field`,\r\n    'any.required': `Password is a required field`,\r\n    'string.min': 'Password must be longer than or equal to 8 characters',\r\n  }),\r\n};\r\n\r\nconst confirmpasswordSchema = {\r\n  value: Joi.string().required().messages({\r\n    'string.empty': `Retype password cannot be an empty field`,\r\n  }),\r\n};\r\n\r\nexport { passwordschema, confirmpasswordSchema };\r\n","const Joi = require('joi');\r\nconst usernameSchema = {\r\n  value: Joi.string().min(3).max(32).required().messages({\r\n    'string.base': `Username should be a type of 'text' or email`,\r\n    'string.empty': `Username cannot be an empty field`,\r\n    'string.min': `Username should have a minimum length of {#limit}`,\r\n    'string.max': `Username should have a maximum length of {#limit}`,\r\n    'any.required': `Username is a required field`,\r\n  }),\r\n};\r\n\r\nconst emailSchema = {\r\n  value: Joi.string()\r\n    .max(320)\r\n    .email({ tlds: { allow: false } })\r\n    .required()\r\n    .messages({\r\n      'string.empty': `Email cannot be an empty field`,\r\n      'string.max': `Email should have a maximum length of {#limit}`,\r\n      'any.required': `Email is a required field`,\r\n    }),\r\n};\r\n\r\nexport { usernameSchema, emailSchema };\r\n","const Joi = require('joi');\r\nconst recoveryCodeSchema = {\r\n  value: Joi.string().required().messages({\r\n    'string.empty': `\"recoveryCode\" cannot be an empty field`,\r\n    'any.required': `\"recoveryCode\" is a required field`,\r\n  }),\r\n};\r\n\r\nconst verifyCodeSchema = {\r\n  value: Joi.string().required().messages({\r\n    'string.empty': `\"recoveryCode\" cannot be an empty field`,\r\n    'any.required': `\"recoveryCode\" is a required field`,\r\n  }),\r\n};\r\n\r\nexport { recoveryCodeSchema, verifyCodeSchema };\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import { alpha, makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '100vh',\r\n    background: \"url('/images/background.jpg') no-repeat center/cover\",\r\n    backgroundAttachment: 'fixed',\r\n    paddingTop: '20vh',\r\n    paddingBottom: '20vh',\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    '&::before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      background: alpha('#000', 0.7),\r\n      zIndex: -1,\r\n    },\r\n  },\r\n  form: {\r\n    width: '27rem',\r\n    maxWidth: 'calc(100% - 20px)',\r\n    margin: '0 auto 0',\r\n    padding: theme.spacing(5, 7),\r\n    borderRadius: 10,\r\n    background: alpha('#000', 0.7),\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(3),\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n  },\r\n  formControl: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    background: '#ddd',\r\n    borderRadius: theme.shape.borderRadius,\r\n    '& .MuiFilledInput-underline:after': {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  inputLabel: {\r\n    fontSize: 13,\r\n    '&.Mui-focused': {\r\n      color: '#000',\r\n    },\r\n    '&.Mui-error': {\r\n      color: 'red',\r\n    },\r\n  },\r\n  textHelper: {\r\n    marginTop: theme.spacing(1),\r\n    color: '#fff',\r\n    '& > a': {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: 'underline',\r\n    },\r\n    '&:not(:last-child)': {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n  errorMessage: {\r\n    fontSize: 11,\r\n    color: 'red',\r\n    fontWeight: 'normal',\r\n  },\r\n  resError: {\r\n    fontSize: 11,\r\n    color: 'red',\r\n    fontWeight: 'normal',\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Typography,\r\n  FormControl,\r\n  FilledInput,\r\n  InputLabel,\r\n  InputAdornment,\r\n  IconButton,\r\n  Box,\r\n  FormHelperText,\r\n} from '@material-ui/core';\r\n\r\nimport useStyles from './Login.styles';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { useInput } from '../../hooks/user-input';\r\nimport { passwordschema, emailSchema } from '../../schemas';\r\nimport ButtonLoading from '../../components/UI/ButtonLoading/ButtonLoading';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../slices/auth.slice';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const isLoading = useSelector((state) => state.auth.isLoading);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const [error, setError] = useState(null);\r\n  const {\r\n    enteredInput: email,\r\n    inputBlurHandler: emailBlurHandler,\r\n    inputChangeHandler: emailChangeHandler,\r\n    inputReset: emailReset,\r\n    inputIsValid: emailIsvalid,\r\n    hasError: emailHasError,\r\n    errorMsg: emailErrorMessage,\r\n  } = useInput(emailSchema);\r\n\r\n  const {\r\n    enteredInput: password,\r\n    inputBlurHandler: passwordBlurHandler,\r\n    inputChangeHandler: passwordChangeHandler,\r\n    inputReset: passwordReset,\r\n    inputIsValid: passwordIsvalid,\r\n    hasError: passwordHasError,\r\n    errorMsg: passwordErrorMessage,\r\n  } = useInput(passwordschema);\r\n\r\n  const formIsValid = emailIsvalid && passwordIsvalid;\r\n\r\n  const toggleShowPasswordHandler = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n  const mouseDownPasswordHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    setError(null);\r\n    try {\r\n      await dispatch(\r\n        login({\r\n          email,\r\n          password,\r\n        })\r\n      ).unwrap();\r\n      emailReset();\r\n      passwordReset();\r\n      //vghuy17ck1@gmail.com\r\n      //Abcxyz123\r\n    } catch (error) {\r\n      toast.error(error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    if (user.banned) {\r\n      return <Redirect to=\"/banned\" />;\r\n    }\r\n    if (user.verified) {\r\n      return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n    if (!user.verified) {\r\n      return <Redirect to=\"/confirm-email\" />;\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <form className={classes.form} onSubmit={formSubmitHandler}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Login form\r\n          </Typography>\r\n          <div className={classes.formControl}>\r\n            <FormControl\r\n              error={emailHasError}\r\n              variant=\"filled\"\r\n              fullWidth\r\n              className={classes.textField}>\r\n              <InputLabel htmlFor=\"email\" className={classes.inputLabel}>\r\n                Email\r\n              </InputLabel>\r\n              <FilledInput\r\n                value={email}\r\n                onBlur={emailBlurHandler}\r\n                onChange={emailChangeHandler}\r\n                id=\"email\"\r\n                type=\"text\"\r\n              />\r\n            </FormControl>\r\n            {emailHasError && (\r\n              <FormHelperText className={classes.errorMessage}>{emailErrorMessage}</FormHelperText>\r\n            )}\r\n          </div>\r\n\r\n          <div className={classes.formControl}>\r\n            <FormControl\r\n              error={passwordHasError}\r\n              className={classes.textField}\r\n              variant=\"filled\"\r\n              fullWidth>\r\n              <InputLabel htmlFor=\"password\" className={classes.inputLabel}>\r\n                Password\r\n              </InputLabel>\r\n              <FilledInput\r\n                value={password}\r\n                onBlur={passwordBlurHandler}\r\n                onChange={passwordChangeHandler}\r\n                id=\"password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                className={classes.inputField}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      edge=\"end\"\r\n                      onClick={toggleShowPasswordHandler}\r\n                      onMouseDown={mouseDownPasswordHandler}>\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n\r\n            {passwordHasError && (\r\n              <FormHelperText className={classes.errorMessage}>\r\n                {passwordErrorMessage}\r\n              </FormHelperText>\r\n            )}\r\n          </div>\r\n\r\n          {error && <FormHelperText className={classes.resError}>{error}</FormHelperText>}\r\n          <ButtonLoading size=\"large\" isLoading={isLoading} type=\"submit\" disabled={!formIsValid}>\r\n            Login\r\n          </ButtonLoading>\r\n\r\n          <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\">\r\n            <Typography variant=\"body2\" className={classes.textHelper}>\r\n              Don't have an account? <Link to=\"/register\">Register</Link>\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.textHelper}>\r\n              <Link to=\"/forgot-password\">Forgot password?</Link>\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}